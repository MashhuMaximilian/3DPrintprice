{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"drag-and-drop\",\n  style: {\n    \"width\": \"100%\"\n  }\n};\nconst _hoisted_2 = {\n  key: 1,\n  class: \"calculate-button\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_viewer_component = _resolveComponent(\"viewer-component\");\n  const _component_v_card = _resolveComponent(\"v-card\");\n  const _component_ChangeElementsComponent = _resolveComponent(\"ChangeElementsComponent\");\n  const _component_v_col = _resolveComponent(\"v-col\");\n  const _component_file_upload_component = _resolveComponent(\"file-upload-component\");\n  const _component_PriceQuotationComponent = _resolveComponent(\"PriceQuotationComponent\");\n  const _component_v_row = _resolveComponent(\"v-row\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  const _component_v_main = _resolveComponent(\"v-main\");\n  const _component_v_app = _resolveComponent(\"v-app\");\n  return _openBlock(), _createBlock(_component_v_app, {\n    style: {\n      \"background-color\": \"#F3F9FE\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_v_main, null, {\n      default: _withCtx(() => [_createVNode(_component_v_container, null, {\n        default: _withCtx(() => [_createVNode(_component_v_row, null, {\n          default: _withCtx(() => [_createCommentVNode(\" Left Column - 3D Viewer \"), _createVNode(_component_v_col, {\n            cols: \"12\",\n            md: \"6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              class: \"viewer-section rounded-card\"\n            }, {\n              default: _withCtx(() => [_createVNode(_component_viewer_component, {\n                ref: \"viewer\",\n                file: $data.uploadedFile,\n                \"floor-color\": $data.floorColor,\n                enableHDR: $data.enableHDR,\n                showFloor: $data.showFloor,\n                onVolumeCalculated: $options.handleVolumeCalculated,\n                onViewerMounted: $options.onViewerMounted,\n                onHeightCalculated: $options.handleHeightCalculated\n              }, null, 8 /* PROPS */, [\"file\", \"floor-color\", \"enableHDR\", \"showFloor\", \"onVolumeCalculated\", \"onViewerMounted\", \"onHeightCalculated\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_v_card, null, {\n              default: _withCtx(() => [_createVNode(_component_ChangeElementsComponent, {\n                onChangeSkybox: $options.handleChangeSkybox,\n                onChangeHdr: $options.handleChangeHDR,\n                onChangeFloor: $options.handleChangeFloor,\n                onChangeSkyboxColor: $options.handleSkyboxColor,\n                onChangeFloorColor: $options.handleChangeFloorColor,\n                onVolumeCalculated: $options.handleVolumeCalculated,\n                onChange: $options.handleFileChange,\n                onToggleHdr: $options.handleHDRChange,\n                onToggleFloor: $options.handleFloorChange,\n                onChangeSkyboxProperty: $options.handleSkyboxPropertyChange\n              }, null, 8 /* PROPS */, [\"onChangeSkybox\", \"onChangeHdr\", \"onChangeFloor\", \"onChangeSkyboxColor\", \"onChangeFloorColor\", \"onVolumeCalculated\", \"onChange\", \"onToggleHdr\", \"onToggleFloor\", \"onChangeSkyboxProperty\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }), _createCommentVNode(\" Right Column - Other Content \"), _createVNode(_component_v_col, {\n            cols: \"12\",\n            md: \"6\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_v_card, {\n              class: \"upload-section rounded-card\"\n            }, {\n              default: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [$data.viewerReady ? (_openBlock(), _createBlock(_component_file_upload_component, {\n                key: 0,\n                viewer: $data.viewerComponent,\n                onFileUploaded: $options.handleFileUpload\n              }, null, 8 /* PROPS */, [\"viewer\", \"onFileUploaded\"])) : _createCommentVNode(\"v-if\", true), $data.fileUploaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createVNode(_component_PriceQuotationComponent, {\n                volumeInMilliliters: $data.volumeInMilliliters,\n                selectedHeight: $data.selectedHeight,\n                originalDimensions: $data.originalDimensions,\n                \"onUpdate:selectedHeight\": $options.handleHeightUpdate\n              }, null, 8 /* PROPS */, [\"volumeInMilliliters\", \"selectedHeight\", \"originalDimensions\", \"onUpdate:selectedHeight\"])])) : _createCommentVNode(\"v-if\", true)])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["class","style","_createBlock","_component_v_app","_createVNode","_component_v_main","_component_v_container","_component_v_row","_createCommentVNode","_component_v_col","cols","md","_component_v_card","_component_viewer_component","ref","file","$data","uploadedFile","floorColor","enableHDR","showFloor","onVolumeCalculated","$options","handleVolumeCalculated","onViewerMounted","onHeightCalculated","handleHeightCalculated","_component_ChangeElementsComponent","onChangeSkybox","handleChangeSkybox","onChangeHdr","handleChangeHDR","onChangeFloor","handleChangeFloor","onChangeSkyboxColor","handleSkyboxColor","onChangeFloorColor","handleChangeFloorColor","onChange","handleFileChange","onToggleHdr","handleHDRChange","onToggleFloor","handleFloorChange","onChangeSkyboxProperty","handleSkyboxPropertyChange","_createElementVNode","_hoisted_1","viewerReady","_component_file_upload_component","viewer","viewerComponent","onFileUploaded","handleFileUpload","fileUploaded","_createElementBlock","_hoisted_2","_component_PriceQuotationComponent","volumeInMilliliters","selectedHeight","originalDimensions","handleHeightUpdate"],"sources":["/Users/max/Documents/3dprintprice/src/App.vue"],"sourcesContent":["<template>\n  <v-app style=\"background-color: #F3F9FE;\">\n    <v-main>\n      <v-container>\n        <v-row>\n          <!-- Left Column - 3D Viewer -->\n          <v-col cols=\"12\" md=\"6\">\n            <v-card class=\"viewer-section rounded-card\">\n\n<viewer-component \nref=\"viewer\" \n:file=\"uploadedFile\" \n:floor-color=\"floorColor\" \n:enableHDR=\"enableHDR\"\n:showFloor=\"showFloor\"\n@volume-calculated=\"handleVolumeCalculated\" \n@viewer-mounted=\"onViewerMounted\"\n@height-calculated=\"handleHeightCalculated\"\n></viewer-component>\n</v-card>\n            <v-card>\n              <ChangeElementsComponent \n              @changeSkybox=\"handleChangeSkybox\"\n              @changeHdr=\"handleChangeHDR\"\n              @changeFloor=\"handleChangeFloor\"\n              @changeSkyboxColor=\"handleSkyboxColor\"\n              @changeFloorColor=\"handleChangeFloorColor\"\n              @volume-calculated=\"handleVolumeCalculated\"\n              @change=\"handleFileChange\" \n              @toggle-hdr=\"handleHDRChange\"\n              @toggle-floor=\"handleFloorChange\"\n              @changeSkyboxProperty=\"handleSkyboxPropertyChange\"\n\n              />\n              \n            </v-card>\n          </v-col>\n\n          <!-- Right Column - Other Content -->\n          <v-col cols=\"12\" md=\"6\">\n            <v-card class=\"upload-section rounded-card\">\n              <div class=\"drag-and-drop\" style=\"width: 100%;\">\n                <file-upload-component \n                    v-if=\"viewerReady\" \n                    :viewer=\"viewerComponent\" \n                    @file-uploaded=\"handleFileUpload\">\n              </file-upload-component>\n                \n              <div class=\"calculate-button\" v-if=\"fileUploaded\">\n             <PriceQuotationComponent\n              :volumeInMilliliters=\"volumeInMilliliters\"\n              :selectedHeight=\"selectedHeight\"\n              :originalDimensions=\"originalDimensions\"\n              @update:selectedHeight=\"handleHeightUpdate\" >\n  </PriceQuotationComponent></div>\n  \n\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n// import * as THREE from 'three'; \nimport FileUploadComponent from './components/FileUploadComponent.vue';\nimport ViewerComponent from './components/3DViewerComponent.vue';\nimport PriceQuotationComponent from './components/PriceQuotationComponent.vue';\nimport ChangeElementsComponent from './components/ChangeElementsComponent.vue';\n\n\n\nexport default {\n  components: {\n    FileUploadComponent,\n    ViewerComponent,\n    PriceQuotationComponent,\n    ChangeElementsComponent\n  },\n  data() {\n    return {\n      uploadedFile: null,\n      scene: null,\n      hdrs: ['AmbienceExposure4k.hdr', 'Animesky2.hdr', 'blouberg.hdr', 'brownphotostudio.hdr', 'CasualDay4K.hdr', 'christmas.hdr', 'CloudedSunGlow4k.hdr', 'Cloudymorning4k.hdr', 'CoriolisNight4k.hdr', 'cyclorama_hard_light_1k.hdr', 'cyclorama.hdr', 'DarkStorm4K.hdr', 'DayInTheClouds4k.hdr', 'Animesky2.hdr', 'HighFantasy4k.hdr', 'MegaSun4k.hdr', 'memorial.hdr', 'PlanetaryEarth4k.hdr', 'moonlessgolf.hdr', 'spot1Lux.hdr', 'sangiuseppe.hdr', 'SunlessCirruscover4k.hdr', 'UnderTheSea4k.hdr', 'UnearthlyRed4k.hdr', 'SkyhighFluffycloudField4k.hdr'],\n      floors: ['pinkfloor2.glb', 'bathroomfloor.glb', 'scififloor.glb'],\n      skyboxes: ['CyberinYourFace.glb', 'DreamlikeLandscape.glb', 'GreenExplosion.glb', 'lightbluesky.glb', 'skyboxanimesky.glb', 'skyboxautumnforest.glb', 'skyboxbasicsky.glb', 'skyboxcityskyline.glb', 'skyboxinthecloud.glb', 'freebasicsky.glb', 'milkyway.glb', 'spacenebula.glb'],\n      currentHDRIndex: 0,\n      currentFloorIndex: 0,\n      currentSkyboxIndex: 0,\n      floorColor: '#333333',\n      viewerReady: false, // Default floor color\n      viewerComponent: null,\n      selectedHeight: null,\n      fileUploaded: false,\n      volumeInMilliliters: null,\n      originalDimensions: null, \n      enableHDR: true,\n      showFloor: true,\n    };\n  },\n\n  mounted() {\n  console.log(\"Viewer reference in App.vue after mount:\", this.$refs.viewer);\n  this.$emit('file-uploaded', this.handleUploadedFile);\n},\nbeforeunmount() {\n    // Remove the 'file-uploaded' event listener\n    this.$emit.$off('file-uploaded', this.handleUploadedFile);\n  },\n\n  methods: {\n\n\n    handleSkyboxPropertyChange({ property, value }) {\n    if (this.$refs.viewer) {\n      // Call a method that handles all property changes including color\n      this.$refs.viewer.updateSkyboxProperties({ [property]: value });\n    }\n  },\n\n    handleHDRChange(isEnabled) {\n      this.enableHDR = isEnabled;\n    },\n    handleFloorChange(isVisible) {\n      this.showFloor = isVisible;\n    },\n\n    handleHeightCalculated({ height, originalDimensions }) {\n      console.log(\"Received in App.vue:\", { height, originalDimensions });\n      this.selectedHeight = height;\n      this.originalDimensions = originalDimensions; // Store original dimensions\n    },\n\n    handleHeightUpdate(height) {\n    console.log(\"Selected height updated in App.vue:\", height);\n    this.selectedHeight = height;\n    \n  },\n\n    handleVolumeCalculated(volume) {\n      this.volumeInMilliliters = volume; // Update the volumeInMilliliters when the event is emitted\n    },\n   \n    onViewerMounted() {\n  this.$nextTick(() => {\n    this.viewerComponent = this.$refs.viewer;\n    this.viewerReady = true; // Set viewerReady to true when the viewer is mounted\n    console.log(\"Viewer reference in App.vue after viewer mounted:\", this.viewerComponent);\n  });\n},\n\nonFileUploaded(file) {\n      if (this.$refs.viewer) {\n        this.$refs.viewer.loadSTLModel(file);\n      }\n    },\n    \n  handleFileChange(event, file) {\n    if (!this.viewerComponent) {\n    console.error(\"Viewer is undefined\");\n    return;\n  }\n  this.viewerComponent.loadSTLModel(file);\n  this.fileUploaded = true; // Set fileUploaded to true when a file is uploaded\n \n        console.log(\"Event:\", event);\n        if (event.target.files && event.target.files.length > 0) {\n            const file = event.target.files[0];\n            if (file && file.size <= 150 * 1024 * 1024) {\n                this.uploadedFile = file;\n                console.log(\"File selected in App.vue:\", file);\n                this.handleFileUpload(file);\n            } else {\n                alert(\"File size exceeds 150MB.\");\n            }\n        } else {\n            console.error(\"No file selected\");\n        }\n    },\n    \n    handleFileUpload(file) {\n  // Make sure the received parameter is indeed a file\n  if (!(file instanceof File)) {\n    console.error(\"Invalid file type:\", file);\n    return;\n  }\n\n  // Load and display the STL file in the 3D viewer\n  if (this.$refs.viewer) {\n    this.$refs.viewer.loadSTLModel(file);\n  }\n\n  // Set fileUploaded to true after the file is successfully uploaded\n  this.fileUploaded = true;\n\n  console.log(\"Received file in App.vue:\", file);\n},\n\nonFileSelected(event) {\n\n  console.log(\"onFileSelected triggered\");\n  const file = event.target.files[0];\n  console.log(\"File selected in App.vue:\", file);\n  if (file) {\n    this.uploadedFile = file;\n    console.log(\"Uploaded file:\", this.uploadedFile);\n  }\n},\n\nhandleChangeHDR() {\n  this.currentHDRIndex = (this.currentHDRIndex + 1) % this.hdrs.length;\n  const newHDR = this.hdrs[this.currentHDRIndex];\n  this.$refs.viewer.updateHDR(newHDR);\n},\nhandleChangeFloor() {\n    // Update the current floor index\n    this.currentFloorIndex = (this.currentFloorIndex + 1) % this.floors.length;\n    // Emit the changeFloor event with the selected floor identifier\n    this.$refs.viewer.updateFloor(this.floors[this.currentFloorIndex]);\n  },\n\n \n// Handle the changeFloorColor event\nhandleChangeFloorColor(colorHex) {\n  console.log('Received changeFloorColor event with colorHex:', colorHex);\n  this.floorColor = colorHex;\n},\n\n\nhandleChangeSkybox() {\n  if (this.$refs.viewer && this.$refs.viewer.updateSkybox) {\n    this.currentSkyboxIndex = (this.currentSkyboxIndex + 1) % this.skyboxes.length;\n    const newSkybox = this.skyboxes[this.currentSkyboxIndex];\n    this.$refs.viewer.updateSkybox(`/assets/skyboxes/${newSkybox}`);\n  } else {\n    console.error(\"Viewer component or updateSkybox method not found.\");\n  }\n},\n\nhandleSceneInitialized(scene) {\n    this.scene = scene;\n  },\n  \n handleSkyboxColor(colorHex) {\n    console.log('handleSkyboxColor called.');\n    console.log(\"Changing background color to:\", colorHex);\n\n    if (!this.$refs.viewer) {\n      console.error(\"Viewer component is not found.\");\n      return;\n    }\n\n    // Dispose of the old skybox and set the new background color\n    this.$refs.viewer.updateSkyboxMaterial(colorHex);\n  },\n  \n   \n\n\n\n\n    \n  }\n\n  \n}\n</script>\n\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n#app, .v-application {\n  font-family: 'Roboto', sans-serif;\n}\n\ninput[type=\"file\"] {\n  display: none;\n}\n\n.viewer {\n  width: 100%;\n  height: 100%;\n}\n\n.viewer-section, .upload-section {\n  width: 100%;\n  height: 400px;\n  height:fit-content;\n  margin-bottom: 20px;\n  box-shadow: 0px 3px 16px 2px rgba(0, 0, 0, 0.12),\n              0px 9px 12px 1px rgba(0, 0, 0, 0.14),\n              0px 5px 6px -3px rgba(0, 0, 0, 0.20);\n}\n\n.viewer-section {\n  height: 600px;\n}\n.rounded-card {\n  border-radius: 15px !important;\n}\n\n.calculate-button > v-btn {\n  width: 100%;\n  font-size: 18px;\n  font-weight: bold;\n}\n</style>\n"],"mappings":";;;EAyCmBA,KAAK,EAAC,eAAe;EAACC,KAAoB,EAApB;IAAA;EAAA;;;;EAOtBD,KAAK,EAAC;;;;;;;;;;;;;uBA/CvBE,YAAA,CA8DQC,gBAAA;IA9DDF,KAAkC,EAAlC;MAAA;IAAA;EAAkC;sBACvC,MA4DS,CA5DTG,YAAA,CA4DSC,iBAAA;wBA3DP,MA0Dc,CA1DdD,YAAA,CA0DcE,sBAAA;0BAzDZ,MAwDQ,CAxDRF,YAAA,CAwDQG,gBAAA;4BAvDN,MAAgC,CAAhCC,mBAAA,6BAAgC,EAChCJ,YAAA,CA8BQK,gBAAA;YA9BDC,IAAI,EAAC,IAAI;YAACC,EAAE,EAAC;;8BAClB,MAYH,CAZGP,YAAA,CAYHQ,iBAAA;cAZWZ,KAAK,EAAC;YAA6B;gCAEvD,MASoB,CATpBI,YAAA,CASoBS,2BAAA;gBARpBC,GAAG,EAAC,QAAQ;gBACXC,IAAI,EAAEC,KAAA,CAAAC,YAAY;gBAClB,aAAW,EAAED,KAAA,CAAAE,UAAU;gBACvBC,SAAS,EAAEH,KAAA,CAAAG,SAAS;gBACpBC,SAAS,EAAEJ,KAAA,CAAAI,SAAS;gBACpBC,kBAAiB,EAAEC,QAAA,CAAAC,sBAAsB;gBACzCC,eAAc,EAAEF,QAAA,CAAAE,eAAe;gBAC/BC,kBAAiB,EAAEH,QAAA,CAAAI;;;gBAGRtB,YAAA,CAeSQ,iBAAA;gCAdP,MAYE,CAZFR,YAAA,CAYEuB,kCAAA;gBAXDC,cAAY,EAAEN,QAAA,CAAAO,kBAAkB;gBAChCC,WAAS,EAAER,QAAA,CAAAS,eAAe;gBAC1BC,aAAW,EAAEV,QAAA,CAAAW,iBAAiB;gBAC9BC,mBAAiB,EAAEZ,QAAA,CAAAa,iBAAiB;gBACpCC,kBAAgB,EAAEd,QAAA,CAAAe,sBAAsB;gBACxChB,kBAAiB,EAAEC,QAAA,CAAAC,sBAAsB;gBACzCe,QAAM,EAAEhB,QAAA,CAAAiB,gBAAgB;gBACxBC,WAAU,EAAElB,QAAA,CAAAmB,eAAe;gBAC3BC,aAAY,EAAEpB,QAAA,CAAAqB,iBAAiB;gBAC/BC,sBAAoB,EAAEtB,QAAA,CAAAuB;;;;;;cAO3BrC,mBAAA,kCAAqC,EACrCJ,YAAA,CAoBQK,gBAAA;YApBDC,IAAI,EAAC,IAAI;YAACC,EAAE,EAAC;;8BAClB,MAkBS,CAlBTP,YAAA,CAkBSQ,iBAAA;cAlBDZ,KAAK,EAAC;YAA6B;gCACzC,MAgBM,CAhBN8C,mBAAA,CAgBM,OAhBNC,UAgBM,GAdM/B,KAAA,CAAAgC,WAAW,I,cADrB9C,YAAA,CAIsB+C,gCAAA;;gBAFjBC,MAAM,EAAElC,KAAA,CAAAmC,eAAe;gBACvBC,cAAa,EAAE9B,QAAA,CAAA+B;0GAGcrC,KAAA,CAAAsC,YAAY,I,cAAhDC,mBAAA,CAMoB,OANpBC,UAMoB,GALrBpD,YAAA,CAKeqD,kCAAA;gBAJbC,mBAAmB,EAAE1C,KAAA,CAAA0C,mBAAmB;gBACxCC,cAAc,EAAE3C,KAAA,CAAA2C,cAAc;gBAC9BC,kBAAkB,EAAE5C,KAAA,CAAA4C,kBAAkB;gBACtC,yBAAqB,EAAEtC,QAAA,CAAAuC"},"metadata":{},"sourceType":"module","externalDependencies":[]}