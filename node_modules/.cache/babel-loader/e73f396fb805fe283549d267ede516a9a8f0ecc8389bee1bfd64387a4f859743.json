{"ast":null,"code":"export default {\n  props: {\n    volumeInMilliliters: Number,\n    selectedHeight: Number,\n    originalDimensions: Object // Accept originalDimensions as a prop\n  },\n\n  data() {\n    return {\n      // Define constants\n      packagingCost: 1,\n      machineCost: 2,\n      markup: 2,\n      designAndReviews: 25,\n      pricePerLiterOfResin: 120,\n      // Initialize variables\n      sellPrice: null,\n      minHeight: 0.5,\n      maxHeight: 16,\n      localSelectedHeight: this.initialHeight,\n      quantity: 1 // Initial quantity\n    };\n  },\n\n  mounted() {\n    this.$emit('volume-calculated', this.handleVolumeCalculated);\n  },\n  beforeUnmount() {\n    this.$emit.$off('volume-calculated', this.handleVolumeCalculated);\n  },\n  watch: {\n    selectedHeight(newVal) {\n      console.log(\"Selected height changed:\", newVal);\n      console.log(\"Original dimensions:\", this.originalDimensions);\n      if (newVal && this.originalDimensions) {\n        const scale = newVal / this.originalDimensions.height;\n        const scaledVolume = this.originalDimensions.width * this.originalDimensions.depth * newVal * scale;\n        console.log(\"Calculated scaled volume:\", scaledVolume);\n        this.calculatePrice(scaledVolume);\n      }\n    },\n    volumeInMilliliters(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.calculatePrice();\n      }\n    },\n    quantity(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.calculatePrice();\n      }\n    }\n  },\n  methods: {\n    increaseQuantity() {\n      this.quantity++; // Increase the quantity\n    },\n\n    decreaseQuantity() {\n      if (this.quantity > 1) {\n        this.quantity--; // Decrease the quantity, but ensure it's not less than 1\n      }\n    },\n\n    updateSelectedHeight(newValue) {\n      this.localSelectedHeight = newValue;\n      this.$emit('update:selectedHeight', newValue);\n      console.log(\"Slider value changed in PriceQuotationComponent.vue:\", newValue);\n      this.$nextTick(() => {\n        this.calculatePrice();\n      });\n    },\n    calculateScaledVolume() {\n      if (this.originalDimensions.height === 0) {\n        return 0; // Avoid division by zero\n      }\n\n      const scale = this.selectedHeight / this.originalDimensions.height;\n      return this.originalDimensions.width * this.originalDimensions.depth * this.selectedHeight * scale;\n    },\n    calculatePrice() {\n      console.log(\"Volume for price calculation:\", this.volumeInMilliliters);\n      const materialCost = this.pricePerLiterOfResin * this.volumeInMilliliters * 1.15 / 1000;\n      this.sellPrice = ((this.packagingCost + materialCost + this.machineCost) * this.markup + this.designAndReviews) * this.quantity;\n      console.log(`Sell Price: ${this.sellPrice}`);\n    }\n  }\n};","map":{"version":3,"names":["props","volumeInMilliliters","Number","selectedHeight","originalDimensions","Object","data","packagingCost","machineCost","markup","designAndReviews","pricePerLiterOfResin","sellPrice","minHeight","maxHeight","localSelectedHeight","initialHeight","quantity","mounted","$emit","handleVolumeCalculated","beforeUnmount","$off","watch","newVal","console","log","scale","height","scaledVolume","width","depth","calculatePrice","oldVal","methods","increaseQuantity","decreaseQuantity","updateSelectedHeight","newValue","$nextTick","calculateScaledVolume","materialCost"],"sources":["/Users/max/Documents/3DPrintprice-1/src/components/PriceQuotationComponent.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-row class=\"bluecontainer\">\n      <!-- Left Column: Price -->\n      <v-col cols=\"12\" md=\"6\">\n        <div class=\"price-display\">\n         <h3>Preț: </h3>\n          <p v-if=\"sellPrice\"> {{ sellPrice.toFixed(2) }} RON</p>\n        </div>\n      </v-col>\n\n      <!-- Right Column: Quantity and Height Selection -->\n      <v-col cols=\"12\" md=\"6\">\n        <div class>\n          <!-- Height Selection -->\n          <div class=\"counter\">\n            <label class=\"small\">Alege înălțimea dorită:</label>\n            <v-slider v-model=\"localSelectedHeight\" :value=\"selectedHeight\" @input=\"updateSelectedHeight\" :min=\"minHeight\" :max=\"maxHeight\" thumb-label></v-slider>\n            <p class=\"small\"> Înălțimea actuală: {{ (selectedHeight/10).toFixed(2) }} cm</p>\n          </div>\n\n          <!-- Quantity Counter -->\n          <div class=\"counter\">\n            <p class=\"small\">Alege cantitatea</p>\n            <v-btn size=\"small\" variant=\"tonal\" @click=\"decreaseQuantity\">-</v-btn>\n            <span class=\"quantity\">{{ quantity }}</span>\n            <v-btn size=\"small\" variant=\"tonal\" @click=\"increaseQuantity\">+</v-btn>\n          </div>\n\n          <!-- Order Button -->\n          <v-btn large color=\"primary\">Comandă Acum</v-btn>\n        </div>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: {\n    volumeInMilliliters: Number,\n    selectedHeight: Number,\n    originalDimensions: Object, // Accept originalDimensions as a prop\n\n\n  },\n  data() {\n    return {\n      // Define constants\n      packagingCost: 1,\n      machineCost: 2,\n      markup: 2,\n      designAndReviews: 25,\n      pricePerLiterOfResin: 120,\n      // Initialize variables\n      sellPrice: null,\n      minHeight: 0.5,\n      maxHeight: 16,\n      localSelectedHeight: this.initialHeight, \n      quantity: 1, // Initial quantity\n    };\n  },\n  mounted() {\n    this.$emit('volume-calculated', this.handleVolumeCalculated);\n  },\n  beforeUnmount() {\n    this.$emit.$off('volume-calculated', this.handleVolumeCalculated);\n  },\n  watch: {\n    selectedHeight(newVal) {\n    console.log(\"Selected height changed:\", newVal);\n    console.log(\"Original dimensions:\", this.originalDimensions);\n    if (newVal && this.originalDimensions) {\n      const scale = newVal / this.originalDimensions.height;\n      const scaledVolume = this.originalDimensions.width * this.originalDimensions.depth * newVal * scale;\n      console.log(\"Calculated scaled volume:\", scaledVolume);\n      this.calculatePrice(scaledVolume);\n    }\n  },\n    \n    volumeInMilliliters(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        this.calculatePrice();\n      }\n    },\n\n    quantity(newVal, oldVal) {\n    if (newVal !== oldVal) {\n      this.calculatePrice();\n    }\n  },\n  },\n\n  methods: {\n\n    increaseQuantity() {\n      this.quantity++; // Increase the quantity\n    },\n    decreaseQuantity() {\n      if (this.quantity > 1) {\n        this.quantity--; // Decrease the quantity, but ensure it's not less than 1\n      }\n    },\n\n    updateSelectedHeight(newValue) {\n    this.localSelectedHeight = newValue;\n    this.$emit('update:selectedHeight', newValue);\n    console.log(\"Slider value changed in PriceQuotationComponent.vue:\", newValue);\n    this.$nextTick(() => {\n    this.calculatePrice(); \n  });\n    \n  },\n    calculateScaledVolume() {\n    if (this.originalDimensions.height === 0) {\n      return 0; // Avoid division by zero\n    }\n    const scale = this.selectedHeight / this.originalDimensions.height;\n    return this.originalDimensions.width * this.originalDimensions.depth * this.selectedHeight * scale;\n  },\n\n    calculatePrice() {\n      console.log(\"Volume for price calculation:\", this.volumeInMilliliters);\n      const materialCost = this.pricePerLiterOfResin * this.volumeInMilliliters * 1.15 / 1000;\n      this.sellPrice = ((this.packagingCost + materialCost + this.machineCost) * this.markup + this.designAndReviews) * this.quantity;\n      console.log(`Sell Price: ${this.sellPrice}`);\n    }\n  }\n};\n</script>\n\n\n\n\n\n<style>\n.file-upload-container {\n  border: 2px dashed #fff;\n  padding: 20px;\n  position: relative;\n}\n\n.uploaded-file-view {\npadding: 25px;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nalign-self: stretch;\n  background-color: #E3F2FD;\n  color:#1976D2;\n  border-radius: 12px;\n}\n\n\nv-btn {\n  border-radius: 4px;\n  padding: 2px;\n}\n\n.counter{\n  border-radius: 4px;\n  padding: 0px 10px 0px 10px;\n  background-color: #ffffff;\n  width:100%;\n  margin-top: 5px;\n  margin-bottom:5px;\n}\n\n.bluecontainer {\nwidth: 100%;\npadding: 5px;\n/* flex-direction: column;\njustify-content: center;\nalign-items: center;\nalign-self: stretch; */\n  background-color: #E3F2FD;\n  color:#1976D2;\n  border-radius: 12px;\n}\n\n.small {\n  font-size:12px;\n  font-weight: 500;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}