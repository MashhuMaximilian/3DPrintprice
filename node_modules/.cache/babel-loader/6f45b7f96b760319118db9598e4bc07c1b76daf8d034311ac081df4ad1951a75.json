{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-71b8e0e0\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"file-upload-container\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"file-upload-message\"\n};\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"max-size\"\n}, \"Maximum size: 150MB\", -1 /* HOISTED */));\nconst _hoisted_5 = {\n  class: \"uploaded-file-view\"\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"span\", {\n  class: \"uploaded\"\n}, \"File uploaded:\", -1 /* HOISTED */));\nconst _hoisted_7 = {\n  class: \"uploaded-file-name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Display before the file is uploaded \"), !$data.isFileUploaded ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"dropzone\",\n    onDragover: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.dragOver && $options.dragOver(...args), [\"prevent\"])),\n    onDragleave: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.dragLeave && $options.dragLeave(...args), [\"prevent\"])),\n    onDrop: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.handleDrop && $options.handleDrop(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", _hoisted_3, [_createTextVNode(\" Drop your files here or \"), _createElementVNode(\"span\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.triggerFileInput && $options.triggerFileInput(...args)),\n    class: \"browse\"\n  }, \"browse\"), _hoisted_4]), _createElementVNode(\"input\", {\n    type: \"file\",\n    ref: \"fileInput\",\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.onFileChange && $options.onFileChange(...args)),\n    accept: \".stl\",\n    hidden: \"\"\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */)], 32 /* HYDRATE_EVENTS */)])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" Display after the file is uploaded \"), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"div\", _hoisted_7, _toDisplayString($data.uploadedFileName), 1 /* TEXT */), _createVNode(_component_v_btn, {\n    variant: \"plain\",\n    onClick: $options.resetUpload\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Upload another file\")]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"onClick\"])])])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","$data","isFileUploaded","_hoisted_2","onDragover","_cache","_withModifiers","args","$options","dragOver","onDragleave","dragLeave","onDrop","handleDrop","_hoisted_3","onClick","triggerFileInput","_hoisted_4","type","ref","onChange","onFileChange","accept","hidden","_Fragment","key","_hoisted_5","_hoisted_6","_hoisted_7","_toDisplayString","uploadedFileName","_createVNode","_component_v_btn","variant","resetUpload"],"sources":["/Users/max/Documents/3DPrintprice-1/src/components/FileUploadComponent.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload-container\">\n    <!-- Display before the file is uploaded -->\n    <div v-if=\"!isFileUploaded\">\n      <div \n        class=\"dropzone\" \n        @dragover.prevent=\"dragOver\" \n        @dragleave.prevent=\"dragLeave\" \n        @drop.prevent=\"handleDrop\"\n      >\n        <div class=\"file-upload-message\">\n          Drop your files here or <span @click=\"triggerFileInput\" class=\"browse\">browse</span>\n          <div class=\"max-size\">Maximum size: 150MB</div>\n        </div>\n        <input \n          type=\"file\" \n          ref=\"fileInput\" \n          @change=\"onFileChange\" \n          accept=\".stl\" \n          hidden\n        />\n      </div>\n    </div>\n\n    <!-- Display after the file is uploaded -->\n    <div v-else>\n    <div class=\"uploaded-file-view\">\n      <span class=\"uploaded\">File uploaded:</span>\n      <div class=\"uploaded-file-name\">{{ uploadedFileName }}</div>\n      <v-btn variant=\"plain\" @click=\"resetUpload\">Upload another file</v-btn>\n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\n\n\n\n\nexport default {\n  data() {\n    return {\n      uploadedFileName: null,\n      isFileUploaded: false,\n    };\n  },\n\n  props: {\n    viewer: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  watch: {\n  viewer(newVal) {\n    console.log(\"Viewer prop changed:\", newVal);\n  }\n},\n\n    methods: {\n      triggerFileInput() {\n        this.$refs.fileInput.click();\n      },\n        \n\n\n  onFileChange(event) {\n      // ...\n      const file = event.target.files[0]; \n\n      if (file) {\n        this.isFileUploaded = true;\n        this.uploadedFileName = file.name;\n        this.$emit('file-uploaded', file);\n\n      }\n    },\n\n  \n\n\n\n\n\n              dragOver() {\n                this.$el.querySelector('.dropzone').classList.add('active');\n              },\n                \n                \n                dragLeave() {\n                  this.$el.querySelector('.dropzone').classList.remove('active');\n                },\n                  \n                  \n                handleDrop(event) {\n                  const file = event.dataTransfer.files[0];\n                  console.log(\"Dropped file:\", file.name);\n                  if (file && file.size <= 150 * 1024 * 1024) {\n                    this.uploadedFileName = file.name;\n                    this.isFileUploaded = true;\n                    console.log(\"Emitting file-uploaded event with file:\", file.name);\n\n                    if (this.viewer && this.viewer.loadSTLModel) {\n                      this.$emit('file-uploaded', file);\n                        } else {\n                          console.error(\"Viewer is not ready or loadSTLModel is not a function\");\n                        }\n                      }\n                },\n\n\n                resetUpload() {\n      this.isFileUploaded = false;\n      this.uploadedFileName = null;\n    },\n                  }\n                }\n                \n</script>\n\n<style scoped>\n.file-upload-container {\n  border: 2px dashed #fff;\n  padding: 20px;\n  position: relative;\n}\n\n.dropzone {\n  text-align: center;\n  height:300px;\n  border-radius: 12px;\n  vertical-align: middle;\n}\n\n.file-upload-message {\n  font-size: 18px;\n  padding: 20px;\n  color: #1F2937;\n}\n\n.browse {\n  color: #3B82F6;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.dropzone.active {\n  background-color: #E3F2FD; /* Light blue background when dragging over */\n}\n\n.max-size {\n  font-size: 14px;\n  color: #9CA3AF;\n}\n\n/* Style for the uploaded file name */\n.uploaded-file-name {\n  margin-top: 10px;\n  font-weight: 600;\n  font-size: 18px;\n}\n\n.uploaded-file-view {\n  display: flex;\npadding: 25px;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 15px;\nalign-self: stretch;\n  background-color: #E3F2FD;\n  color:#1976D2;\n  border-radius: 12px;\n}\n\n.v-btn {\n  font-size: 11px;\n}\n.uploaded {\n  color: #5CBBF6;\n  font-size: 13px;\n  font-weight: 400;\n  margin-bottom: -15px;\n}\n</style>\n"],"mappings":";;;EACOA,KAAK,EAAC;AAAuB;;;;;EASvBA,KAAK,EAAC;AAAqB;gEAE9BC,mBAAA,CAA+C;EAA1CD,KAAK,EAAC;AAAU,GAAC,qBAAmB;;EAc1CA,KAAK,EAAC;AAAoB;gEAC7BC,mBAAA,CAA4C;EAAtCD,KAAK,EAAC;AAAU,GAAC,gBAAc;;EAChCA,KAAK,EAAC;AAAoB;;;uBA3BnCE,mBAAA,CA+BM,OA/BNC,UA+BM,GA9BJC,mBAAA,yCAA4C,E,CAChCC,KAAA,CAAAC,cAAc,I,cAA1BJ,mBAAA,CAmBM,OAAAK,UAAA,GAlBJN,mBAAA,CAiBM;IAhBJD,KAAK,EAAC,UAAU;IACfQ,UAAQ,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAC1BG,WAAS,EAAAL,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAG,SAAA,IAAAH,QAAA,CAAAG,SAAA,IAAAJ,IAAA,CAAS;IAC5BK,MAAI,EAAAP,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAK,UAAA,IAAAL,QAAA,CAAAK,UAAA,IAAAN,IAAA,CAAU;MAEzBV,mBAAA,CAGM,OAHNiB,UAGM,G,iBAH2B,2BACP,GAAAjB,mBAAA,CAA4D;IAArDkB,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAQ,gBAAA,IAAAR,QAAA,CAAAQ,gBAAA,IAAAT,IAAA,CAAgB;IAAEX,KAAK,EAAC;KAAS,QAAM,GAC7EqB,UAA+C,C,GAEjDpB,mBAAA,CAME;IALAqB,IAAI,EAAC,MAAM;IACXC,GAAG,EAAC,WAAW;IACdC,QAAM,EAAAf,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEC,QAAA,CAAAa,YAAA,IAAAb,QAAA,CAAAa,YAAA,IAAAd,IAAA,CAAY;IACrBe,MAAM,EAAC,MAAM;IACbC,MAAM,EAAN;gGAMNzB,mBAAA,CAMI0B,SAAA;IAAAC,GAAA;EAAA,IAPJzB,mBAAA,wCAA2C,EAC3CH,mBAAA,CAMI,cALJA,mBAAA,CAIM,OAJN6B,UAIM,GAHJC,UAA4C,EAC5C9B,mBAAA,CAA4D,OAA5D+B,UAA4D,EAAAC,gBAAA,CAAzB5B,KAAA,CAAA6B,gBAAgB,kBACnDC,YAAA,CAAuEC,gBAAA;IAAhEC,OAAO,EAAC,OAAO;IAAElB,OAAK,EAAEP,QAAA,CAAA0B;;sBAAa,MAAmB,C,iBAAnB,qBAAmB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}