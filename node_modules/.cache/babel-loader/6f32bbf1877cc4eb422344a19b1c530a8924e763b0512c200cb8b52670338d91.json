{"ast":null,"code":"// import * as THREE from 'three'; \nimport FileUploadComponent from './components/FileUploadComponent.vue';\nimport ViewerComponent from './components/3DViewerComponent.vue';\nimport PriceQuotationComponent from './components/PriceQuotationComponent.vue';\nimport ChangeElementsComponent from './components/ChangeElementsComponent.vue';\nexport default {\n  components: {\n    FileUploadComponent,\n    ViewerComponent,\n    PriceQuotationComponent,\n    ChangeElementsComponent\n  },\n  data() {\n    return {\n      uploadedFile: null,\n      scene: null,\n      hdrs: ['AmbienceExposure4k.hdr', 'Animesky2.hdr', 'blouberg.hdr', 'brownphotostudio.hdr', 'CasualDay4K.hdr', 'christmas.hdr', 'CloudedSunGlow4k.hdr', 'Cloudymorning4k.hdr', 'CoriolisNight4k.hdr', 'cyclorama_hard_light_1k.hdr', 'cyclorama.hdr', 'DarkStorm4K.hdr', 'DayInTheClouds4k.hdr', 'Animesky2.hdr', 'HighFantasy4k.hdr', 'MegaSun4k.hdr', 'memorial.hdr', 'PlanetaryEarth4k.hdr', 'moonlessgolf.hdr', 'spot1Lux.hdr', 'sangiuseppe.hdr', 'SunlessCirruscover4k.hdr', 'UnderTheSea4k.hdr', 'UnearthlyRed4k.hdr', 'SkyhighFluffycloudField4k.hdr'],\n      floors: ['pinkfloor2.glb', 'bathroomfloor.glb', 'scififloor.glb'],\n      skyboxes: ['CyberinYourFace.glb', 'DreamlikeLandscape.glb', 'GreenExplosion.glb', 'lightbluesky.glb', 'skyboxanimesky.glb', 'skyboxautumnforest.glb', 'skyboxbasicsky.glb', 'skyboxcityskyline.glb', 'skyboxinthecloud.glb', 'freebasicsky.glb', 'milkyway.glb', 'spacenebula.glb'],\n      currentHDRIndex: 0,\n      currentFloorIndex: 0,\n      currentSkyboxIndex: 0,\n      floorColor: '#333333',\n      viewerReady: false,\n      // Default floor color\n      viewerComponent: null,\n      selectedHeight: null,\n      fileUploaded: false,\n      volumeInMilliliters: null,\n      originalDimensions: null,\n      enableHDR: true,\n      showFloor: true\n    };\n  },\n  mounted() {\n    console.log(\"Viewer reference in App.vue after mount:\", this.$refs.viewer);\n    this.$emit('file-uploaded', this.handleUploadedFile);\n  },\n  beforeunmount() {\n    // Remove the 'file-uploaded' event listener\n    this.$emit.$off('file-uploaded', this.handleUploadedFile);\n  },\n  methods: {\n    handleSkyboxPropertyChange({\n      property,\n      value\n    }) {\n      if (this.$refs.viewer) {\n        // Call a method that handles all property changes including color\n        this.$refs.viewer.updateSkyboxProperties({\n          [property]: value\n        });\n      }\n    },\n    handleHDRChange(isEnabled) {\n      this.enableHDR = isEnabled;\n    },\n    handleFloorChange(isVisible) {\n      this.showFloor = isVisible;\n    },\n    handleHeightCalculated({\n      height,\n      originalDimensions\n    }) {\n      console.log(\"Received in App.vue:\", {\n        height,\n        originalDimensions\n      });\n      this.selectedHeight = height;\n      this.originalDimensions = originalDimensions; // Store original dimensions\n    },\n\n    handleHeightUpdate(height) {\n      console.log(\"Selected height updated in App.vue:\", height);\n      this.selectedHeight = height;\n    },\n    handleVolumeCalculated(volume) {\n      this.volumeInMilliliters = volume; // Update the volumeInMilliliters when the event is emitted\n    },\n\n    onViewerMounted() {\n      this.$nextTick(() => {\n        this.viewerComponent = this.$refs.viewer;\n        this.viewerReady = true; // Set viewerReady to true when the viewer is mounted\n        console.log(\"Viewer reference in App.vue after viewer mounted:\", this.viewerComponent);\n      });\n    },\n    onFileUploaded(file) {\n      if (this.$refs.viewer) {\n        this.$refs.viewer.loadSTLModel(file);\n      }\n    },\n    handleFileChange(event, file) {\n      if (!this.viewerComponent) {\n        console.error(\"Viewer is undefined\");\n        return;\n      }\n      this.viewerComponent.loadSTLModel(file);\n      this.fileUploaded = true; // Set fileUploaded to true when a file is uploaded\n\n      console.log(\"Event:\", event);\n      if (event.target.files && event.target.files.length > 0) {\n        const file = event.target.files[0];\n        if (file && file.size <= 150 * 1024 * 1024) {\n          this.uploadedFile = file;\n          console.log(\"File selected in App.vue:\", file);\n          this.handleFileUpload(file);\n        } else {\n          alert(\"File size exceeds 150MB.\");\n        }\n      } else {\n        console.error(\"No file selected\");\n      }\n    },\n    handleFileUpload(file) {\n      // Make sure the received parameter is indeed a file\n      if (!(file instanceof File)) {\n        console.error(\"Invalid file type:\", file);\n        return;\n      }\n\n      // Load and display the STL file in the 3D viewer\n      if (this.$refs.viewer) {\n        this.$refs.viewer.loadSTLModel(file);\n      }\n\n      // Set fileUploaded to true after the file is successfully uploaded\n      this.fileUploaded = true;\n      console.log(\"Received file in App.vue:\", file);\n    },\n    onFileSelected(event) {\n      console.log(\"onFileSelected triggered\");\n      const file = event.target.files[0];\n      console.log(\"File selected in App.vue:\", file);\n      if (file) {\n        this.uploadedFile = file;\n        console.log(\"Uploaded file:\", this.uploadedFile);\n      }\n    },\n    handleChangeHDR() {\n      this.currentHDRIndex = (this.currentHDRIndex + 1) % this.hdrs.length;\n      const newHDR = this.hdrs[this.currentHDRIndex];\n      this.$refs.viewer.updateHDR(newHDR);\n    },\n    handleChangeFloor() {\n      // Update the current floor index\n      this.currentFloorIndex = (this.currentFloorIndex + 1) % this.floors.length;\n      // Emit the changeFloor event with the selected floor identifier\n      this.$refs.viewer.updateFloor(this.floors[this.currentFloorIndex]);\n    },\n    // Handle the changeFloorColor event\n    handleChangeFloorColor(colorHex) {\n      console.log('Received changeFloorColor event with colorHex:', colorHex);\n      this.floorColor = colorHex;\n    },\n    handleChangeSkybox() {\n      if (this.$refs.viewer && this.$refs.viewer.updateSkybox) {\n        this.currentSkyboxIndex = (this.currentSkyboxIndex + 1) % this.skyboxes.length;\n        const newSkybox = this.skyboxes[this.currentSkyboxIndex];\n        this.$refs.viewer.updateSkybox(`/assets/skyboxes/${newSkybox}`);\n      } else {\n        console.error(\"Viewer component or updateSkybox method not found.\");\n      }\n    },\n    handleSceneInitialized(scene) {\n      this.scene = scene;\n    },\n    handleSkyboxColor(colorHex) {\n      console.log('handleSkyboxColor called.');\n      console.log(\"Changing background color to:\", colorHex);\n      if (!this.$refs.viewer) {\n        console.error(\"Viewer component is not found.\");\n        return;\n      }\n\n      // Dispose of the old skybox and set the new background color\n      this.$refs.viewer.updateSkyboxMaterial(colorHex);\n    }\n  }\n};","map":{"version":3,"names":["FileUploadComponent","ViewerComponent","PriceQuotationComponent","ChangeElementsComponent","components","data","uploadedFile","scene","hdrs","floors","skyboxes","currentHDRIndex","currentFloorIndex","currentSkyboxIndex","floorColor","viewerReady","viewerComponent","selectedHeight","fileUploaded","volumeInMilliliters","originalDimensions","enableHDR","showFloor","mounted","console","log","$refs","viewer","$emit","handleUploadedFile","beforeunmount","$off","methods","handleSkyboxPropertyChange","property","value","updateSkyboxProperties","handleHDRChange","isEnabled","handleFloorChange","isVisible","handleHeightCalculated","height","handleHeightUpdate","handleVolumeCalculated","volume","onViewerMounted","$nextTick","onFileUploaded","file","loadSTLModel","handleFileChange","event","error","target","files","length","size","handleFileUpload","alert","File","onFileSelected","handleChangeHDR","newHDR","updateHDR","handleChangeFloor","updateFloor","handleChangeFloorColor","colorHex","handleChangeSkybox","updateSkybox","newSkybox","handleSceneInitialized","handleSkyboxColor","updateSkyboxMaterial"],"sources":["/Users/max/Documents/3dprintprice/src/App.vue"],"sourcesContent":["<template>\n  <v-app style=\"background-color: #F3F9FE;\">\n    <v-main>\n      <v-container>\n        <v-row>\n          <!-- Left Column - 3D Viewer -->\n          <v-col cols=\"12\" md=\"6\">\n            <v-card class=\"viewer-section rounded-card\">\n\n<viewer-component \nref=\"viewer\" \n:file=\"uploadedFile\" \n:floor-color=\"floorColor\" \n:enableHDR=\"enableHDR\"\n:showFloor=\"showFloor\"\n@volume-calculated=\"handleVolumeCalculated\" \n@viewer-mounted=\"onViewerMounted\"\n@height-calculated=\"handleHeightCalculated\"\n></viewer-component>\n</v-card>\n            <v-card>\n              <ChangeElementsComponent \n              @changeSkybox=\"handleChangeSkybox\"\n              @changeHdr=\"handleChangeHDR\"\n              @changeFloor=\"handleChangeFloor\"\n              @changeSkyboxColor=\"handleSkyboxColor\"\n              @changeFloorColor=\"handleChangeFloorColor\"\n              @volume-calculated=\"handleVolumeCalculated\"\n              @change=\"handleFileChange\" \n              @toggle-hdr=\"handleHDRChange\"\n              @toggle-floor=\"handleFloorChange\"\n              @changeSkyboxProperty=\"handleSkyboxPropertyChange\"\n\n              />\n              \n            </v-card>\n          </v-col>\n\n          <!-- Right Column - Other Content -->\n          <v-col cols=\"12\" md=\"6\">\n            <v-card class=\"upload-section rounded-card\">\n              <div class=\"drag-and-drop\" style=\"width: 100%;\">\n                <file-upload-component \n                    v-if=\"viewerReady\" \n                    :viewer=\"viewerComponent\" \n                    @file-uploaded=\"handleFileUpload\">\n              </file-upload-component>\n                \n              <div class=\"calculate-button\" v-if=\"fileUploaded\">\n             <PriceQuotationComponent\n              :volumeInMilliliters=\"volumeInMilliliters\"\n              :selectedHeight=\"selectedHeight\"\n              :originalDimensions=\"originalDimensions\"\n              @update:selectedHeight=\"handleHeightUpdate\" >\n  </PriceQuotationComponent></div>\n  \n\n              </div>\n            </v-card>\n          </v-col>\n        </v-row>\n      </v-container>\n    </v-main>\n  </v-app>\n</template>\n\n<script>\n// import * as THREE from 'three'; \nimport FileUploadComponent from './components/FileUploadComponent.vue';\nimport ViewerComponent from './components/3DViewerComponent.vue';\nimport PriceQuotationComponent from './components/PriceQuotationComponent.vue';\nimport ChangeElementsComponent from './components/ChangeElementsComponent.vue';\n\n\n\nexport default {\n  components: {\n    FileUploadComponent,\n    ViewerComponent,\n    PriceQuotationComponent,\n    ChangeElementsComponent\n  },\n  data() {\n    return {\n      uploadedFile: null,\n      scene: null,\n      hdrs: ['AmbienceExposure4k.hdr', 'Animesky2.hdr', 'blouberg.hdr', 'brownphotostudio.hdr', 'CasualDay4K.hdr', 'christmas.hdr', 'CloudedSunGlow4k.hdr', 'Cloudymorning4k.hdr', 'CoriolisNight4k.hdr', 'cyclorama_hard_light_1k.hdr', 'cyclorama.hdr', 'DarkStorm4K.hdr', 'DayInTheClouds4k.hdr', 'Animesky2.hdr', 'HighFantasy4k.hdr', 'MegaSun4k.hdr', 'memorial.hdr', 'PlanetaryEarth4k.hdr', 'moonlessgolf.hdr', 'spot1Lux.hdr', 'sangiuseppe.hdr', 'SunlessCirruscover4k.hdr', 'UnderTheSea4k.hdr', 'UnearthlyRed4k.hdr', 'SkyhighFluffycloudField4k.hdr'],\n      floors: ['pinkfloor2.glb', 'bathroomfloor.glb', 'scififloor.glb'],\n      skyboxes: ['CyberinYourFace.glb', 'DreamlikeLandscape.glb', 'GreenExplosion.glb', 'lightbluesky.glb', 'skyboxanimesky.glb', 'skyboxautumnforest.glb', 'skyboxbasicsky.glb', 'skyboxcityskyline.glb', 'skyboxinthecloud.glb', 'freebasicsky.glb', 'milkyway.glb', 'spacenebula.glb'],\n      currentHDRIndex: 0,\n      currentFloorIndex: 0,\n      currentSkyboxIndex: 0,\n      floorColor: '#333333',\n      viewerReady: false, // Default floor color\n      viewerComponent: null,\n      selectedHeight: null,\n      fileUploaded: false,\n      volumeInMilliliters: null,\n      originalDimensions: null, \n      enableHDR: true,\n      showFloor: true,\n    };\n  },\n\n  mounted() {\n  console.log(\"Viewer reference in App.vue after mount:\", this.$refs.viewer);\n  this.$emit('file-uploaded', this.handleUploadedFile);\n},\nbeforeunmount() {\n    // Remove the 'file-uploaded' event listener\n    this.$emit.$off('file-uploaded', this.handleUploadedFile);\n  },\n\n  methods: {\n\n\n    handleSkyboxPropertyChange({ property, value }) {\n    if (this.$refs.viewer) {\n      // Call a method that handles all property changes including color\n      this.$refs.viewer.updateSkyboxProperties({ [property]: value });\n    }\n  },\n\n    handleHDRChange(isEnabled) {\n      this.enableHDR = isEnabled;\n    },\n    handleFloorChange(isVisible) {\n      this.showFloor = isVisible;\n    },\n\n    handleHeightCalculated({ height, originalDimensions }) {\n      console.log(\"Received in App.vue:\", { height, originalDimensions });\n      this.selectedHeight = height;\n      this.originalDimensions = originalDimensions; // Store original dimensions\n    },\n\n    handleHeightUpdate(height) {\n    console.log(\"Selected height updated in App.vue:\", height);\n    this.selectedHeight = height;\n    \n  },\n\n    handleVolumeCalculated(volume) {\n      this.volumeInMilliliters = volume; // Update the volumeInMilliliters when the event is emitted\n    },\n   \n    onViewerMounted() {\n  this.$nextTick(() => {\n    this.viewerComponent = this.$refs.viewer;\n    this.viewerReady = true; // Set viewerReady to true when the viewer is mounted\n    console.log(\"Viewer reference in App.vue after viewer mounted:\", this.viewerComponent);\n  });\n},\n\nonFileUploaded(file) {\n      if (this.$refs.viewer) {\n        this.$refs.viewer.loadSTLModel(file);\n      }\n    },\n    \n  handleFileChange(event, file) {\n    if (!this.viewerComponent) {\n    console.error(\"Viewer is undefined\");\n    return;\n  }\n  this.viewerComponent.loadSTLModel(file);\n  this.fileUploaded = true; // Set fileUploaded to true when a file is uploaded\n \n        console.log(\"Event:\", event);\n        if (event.target.files && event.target.files.length > 0) {\n            const file = event.target.files[0];\n            if (file && file.size <= 150 * 1024 * 1024) {\n                this.uploadedFile = file;\n                console.log(\"File selected in App.vue:\", file);\n                this.handleFileUpload(file);\n            } else {\n                alert(\"File size exceeds 150MB.\");\n            }\n        } else {\n            console.error(\"No file selected\");\n        }\n    },\n    \n    handleFileUpload(file) {\n  // Make sure the received parameter is indeed a file\n  if (!(file instanceof File)) {\n    console.error(\"Invalid file type:\", file);\n    return;\n  }\n\n  // Load and display the STL file in the 3D viewer\n  if (this.$refs.viewer) {\n    this.$refs.viewer.loadSTLModel(file);\n  }\n\n  // Set fileUploaded to true after the file is successfully uploaded\n  this.fileUploaded = true;\n\n  console.log(\"Received file in App.vue:\", file);\n},\n\nonFileSelected(event) {\n\n  console.log(\"onFileSelected triggered\");\n  const file = event.target.files[0];\n  console.log(\"File selected in App.vue:\", file);\n  if (file) {\n    this.uploadedFile = file;\n    console.log(\"Uploaded file:\", this.uploadedFile);\n  }\n},\n\nhandleChangeHDR() {\n  this.currentHDRIndex = (this.currentHDRIndex + 1) % this.hdrs.length;\n  const newHDR = this.hdrs[this.currentHDRIndex];\n  this.$refs.viewer.updateHDR(newHDR);\n},\nhandleChangeFloor() {\n    // Update the current floor index\n    this.currentFloorIndex = (this.currentFloorIndex + 1) % this.floors.length;\n    // Emit the changeFloor event with the selected floor identifier\n    this.$refs.viewer.updateFloor(this.floors[this.currentFloorIndex]);\n  },\n\n \n// Handle the changeFloorColor event\nhandleChangeFloorColor(colorHex) {\n  console.log('Received changeFloorColor event with colorHex:', colorHex);\n  this.floorColor = colorHex;\n},\n\n\nhandleChangeSkybox() {\n  if (this.$refs.viewer && this.$refs.viewer.updateSkybox) {\n    this.currentSkyboxIndex = (this.currentSkyboxIndex + 1) % this.skyboxes.length;\n    const newSkybox = this.skyboxes[this.currentSkyboxIndex];\n    this.$refs.viewer.updateSkybox(`/assets/skyboxes/${newSkybox}`);\n  } else {\n    console.error(\"Viewer component or updateSkybox method not found.\");\n  }\n},\n\nhandleSceneInitialized(scene) {\n    this.scene = scene;\n  },\n  \n handleSkyboxColor(colorHex) {\n    console.log('handleSkyboxColor called.');\n    console.log(\"Changing background color to:\", colorHex);\n\n    if (!this.$refs.viewer) {\n      console.error(\"Viewer component is not found.\");\n      return;\n    }\n\n    // Dispose of the old skybox and set the new background color\n    this.$refs.viewer.updateSkyboxMaterial(colorHex);\n  },\n  \n   \n\n\n\n\n    \n  }\n\n  \n}\n</script>\n\n\n<style scoped>\n@import url('https://fonts.googleapis.com/css2?family=Roboto&display=swap');\n#app, .v-application {\n  font-family: 'Roboto', sans-serif;\n}\n\ninput[type=\"file\"] {\n  display: none;\n}\n\n.viewer {\n  width: 100%;\n  height: 100%;\n}\n\n.viewer-section, .upload-section {\n  width: 100%;\n  height: 400px;\n  height:fit-content;\n  margin-bottom: 20px;\n  box-shadow: 0px 3px 16px 2px rgba(0, 0, 0, 0.12),\n              0px 9px 12px 1px rgba(0, 0, 0, 0.14),\n              0px 5px 6px -3px rgba(0, 0, 0, 0.20);\n}\n\n.viewer-section {\n  height: 600px;\n}\n.rounded-card {\n  border-radius: 15px !important;\n}\n\n.calculate-button > v-btn {\n  width: 100%;\n  font-size: 18px;\n  font-weight: bold;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}