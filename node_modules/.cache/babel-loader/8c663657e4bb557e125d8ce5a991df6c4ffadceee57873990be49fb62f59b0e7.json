{"ast":null,"code":"export default {\n  data() {\n    return {\n      uploadedFileName: null,\n      isFileUploaded: false\n    };\n  },\n  props: {\n    viewer: {\n      type: Object,\n      default: () => {}\n    }\n  },\n  watch: {\n    viewer(newVal) {\n      console.log(\"Viewer prop changed:\", newVal);\n    }\n  },\n  methods: {\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    onFileChange(event) {\n      // ...\n      const file = event.target.files[0];\n      if (file) {\n        this.isFileUploaded = true;\n        this.uploadedFileName = file.name;\n        this.$emit('file-uploaded', file);\n      }\n    },\n    dragOver() {\n      this.$el.querySelector('.dropzone').classList.add('active');\n    },\n    dragLeave() {\n      this.$el.querySelector('.dropzone').classList.remove('active');\n    },\n    handleDrop(event) {\n      const file = event.dataTransfer.files[0];\n      console.log(\"Dropped file:\", file.name);\n      if (file && file.size <= 150 * 1024 * 1024) {\n        this.uploadedFileName = file.name;\n        this.isFileUploaded = true;\n        console.log(\"Emitting file-uploaded event with file:\", file.name);\n        if (this.viewer && this.viewer.loadSTLModel) {\n          this.$emit('file-uploaded', file);\n        } else {\n          console.error(\"Viewer is not ready or loadSTLModel is not a function\");\n        }\n      }\n    },\n    resetUpload() {\n      this.isFileUploaded = false;\n      this.uploadedFileName = null;\n    }\n  }\n};","map":{"version":3,"names":["data","uploadedFileName","isFileUploaded","props","viewer","type","Object","default","watch","newVal","console","log","methods","triggerFileInput","$refs","fileInput","click","onFileChange","event","file","target","files","name","$emit","dragOver","$el","querySelector","classList","add","dragLeave","remove","handleDrop","dataTransfer","size","loadSTLModel","error","resetUpload"],"sources":["/Users/max/Documents/3DPrintprice-1/src/components/FileUploadComponent.vue"],"sourcesContent":["<template>\n  <div class=\"file-upload-container\">\n    <!-- Display before the file is uploaded -->\n    <div v-if=\"!isFileUploaded\">\n      <div \n        class=\"dropzone\" \n        @dragover.prevent=\"dragOver\" \n        @dragleave.prevent=\"dragLeave\" \n        @drop.prevent=\"handleDrop\"\n      >\n        <div class=\"file-upload-message\">\n          Drop your files here or <span @click=\"triggerFileInput\" class=\"browse\">browse</span>\n          <div class=\"max-size\">Maximum size: 150MB</div>\n        </div>\n        <input \n          type=\"file\" \n          ref=\"fileInput\" \n          @change=\"onFileChange\" \n          accept=\".stl\" \n          hidden\n        />\n      </div>\n    </div>\n\n    <!-- Display after the file is uploaded -->\n    <div v-else>\n    <div class=\"uploaded-file-view\">\n      <span class=\"uploaded\">File uploaded:</span>\n      <div class=\"uploaded-file-name\">{{ uploadedFileName }}</div>\n      <v-btn variant=\"plain\" @click=\"resetUpload\">Upload another file</v-btn>\n    </div>\n  </div>\n  </div>\n</template>\n\n<script>\n\n\n\n\nexport default {\n  data() {\n    return {\n      uploadedFileName: null,\n      isFileUploaded: false,\n    };\n  },\n\n  props: {\n    viewer: {\n      type: Object,\n      default: () => {}\n    }\n  },\n\n  watch: {\n  viewer(newVal) {\n    console.log(\"Viewer prop changed:\", newVal);\n  }\n},\n\n    methods: {\n      triggerFileInput() {\n        this.$refs.fileInput.click();\n      },\n        \n\n\n  onFileChange(event) {\n      // ...\n      const file = event.target.files[0]; \n\n      if (file) {\n        this.isFileUploaded = true;\n        this.uploadedFileName = file.name;\n        this.$emit('file-uploaded', file);\n\n      }\n    },\n\n  \n\n\n\n\n\n              dragOver() {\n                this.$el.querySelector('.dropzone').classList.add('active');\n              },\n                \n                \n                dragLeave() {\n                  this.$el.querySelector('.dropzone').classList.remove('active');\n                },\n                  \n                  \n                handleDrop(event) {\n                  const file = event.dataTransfer.files[0];\n                  console.log(\"Dropped file:\", file.name);\n                  if (file && file.size <= 150 * 1024 * 1024) {\n                    this.uploadedFileName = file.name;\n                    this.isFileUploaded = true;\n                    console.log(\"Emitting file-uploaded event with file:\", file.name);\n\n                    if (this.viewer && this.viewer.loadSTLModel) {\n                      this.$emit('file-uploaded', file);\n                        } else {\n                          console.error(\"Viewer is not ready or loadSTLModel is not a function\");\n                        }\n                      }\n                },\n\n\n                resetUpload() {\n      this.isFileUploaded = false;\n      this.uploadedFileName = null;\n    },\n                  }\n                }\n                \n</script>\n\n<style scoped>\n.file-upload-container {\n  border: 2px dashed #fff;\n  padding: 20px;\n  position: relative;\n}\n\n.dropzone {\n  text-align: center;\n  height:300px;\n  border-radius: 12px;\n  vertical-align: middle;\n}\n\n.file-upload-message {\n  font-size: 18px;\n  padding: 20px;\n  color: #1F2937;\n}\n\n.browse {\n  color: #3B82F6;\n  text-decoration: underline;\n  cursor: pointer;\n}\n\n.dropzone.active {\n  background-color: #E3F2FD; /* Light blue background when dragging over */\n}\n\n.max-size {\n  font-size: 14px;\n  color: #9CA3AF;\n}\n\n/* Style for the uploaded file name */\n.uploaded-file-name {\n  margin-top: 10px;\n  font-weight: 600;\n  font-size: 18px;\n}\n\n.uploaded-file-view {\n  display: flex;\npadding: 25px;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\ngap: 15px;\nalign-self: stretch;\n  background-color: #E3F2FD;\n  color:#1976D2;\n  border-radius: 12px;\n}\n\n.v-btn {\n  font-size: 11px;\n}\n.uploaded {\n  color: #5CBBF6;\n  font-size: 13px;\n  font-weight: 400;\n  margin-bottom: -15px;\n}\n</style>\n"],"mappings":"AAwCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,IAAI;MACtBC,cAAc,EAAE;IAClB,CAAC;EACH,CAAC;EAEDC,KAAK,EAAE;IACLC,MAAM,EAAE;MACNC,IAAI,EAAEC,MAAM;MACZC,OAAO,EAAEA,CAAA,KAAM,CAAC;IAClB;EACF,CAAC;EAEDC,KAAK,EAAE;IACPJ,MAAMA,CAACK,MAAM,EAAE;MACbC,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEF,MAAM,CAAC;IAC7C;EACF,CAAC;EAEGG,OAAO,EAAE;IACPC,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC9B,CAAC;IAILC,YAAYA,CAACC,KAAK,EAAE;MAChB;MACA,MAAMC,IAAG,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAElC,IAAIF,IAAI,EAAE;QACR,IAAI,CAACjB,cAAa,GAAI,IAAI;QAC1B,IAAI,CAACD,gBAAe,GAAIkB,IAAI,CAACG,IAAI;QACjC,IAAI,CAACC,KAAK,CAAC,eAAe,EAAEJ,IAAI,CAAC;MAEnC;IACF,CAAC;IAQSK,QAAQA,CAAA,EAAG;MACT,IAAI,CAACC,GAAG,CAACC,aAAa,CAAC,WAAW,CAAC,CAACC,SAAS,CAACC,GAAG,CAAC,QAAQ,CAAC;IAC7D,CAAC;IAGCC,SAASA,CAAA,EAAG;MACV,IAAI,CAACJ,GAAG,CAACC,aAAa,CAAC,WAAW,CAAC,CAACC,SAAS,CAACG,MAAM,CAAC,QAAQ,CAAC;IAChE,CAAC;IAGDC,UAAUA,CAACb,KAAK,EAAE;MAChB,MAAMC,IAAG,GAAID,KAAK,CAACc,YAAY,CAACX,KAAK,CAAC,CAAC,CAAC;MACxCX,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEQ,IAAI,CAACG,IAAI,CAAC;MACvC,IAAIH,IAAG,IAAKA,IAAI,CAACc,IAAG,IAAK,GAAE,GAAI,IAAG,GAAI,IAAI,EAAE;QAC1C,IAAI,CAAChC,gBAAe,GAAIkB,IAAI,CAACG,IAAI;QACjC,IAAI,CAACpB,cAAa,GAAI,IAAI;QAC1BQ,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEQ,IAAI,CAACG,IAAI,CAAC;QAEjE,IAAI,IAAI,CAAClB,MAAK,IAAK,IAAI,CAACA,MAAM,CAAC8B,YAAY,EAAE;UAC3C,IAAI,CAACX,KAAK,CAAC,eAAe,EAAEJ,IAAI,CAAC;QAC/B,OAAO;UACLT,OAAO,CAACyB,KAAK,CAAC,uDAAuD,CAAC;QACxE;MACF;IACN,CAAC;IAGDC,WAAWA,CAAA,EAAG;MACxB,IAAI,CAAClC,cAAa,GAAI,KAAK;MAC3B,IAAI,CAACD,gBAAe,GAAI,IAAI;IAC9B;EACc;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}